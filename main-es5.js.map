{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/all-pokemons/all-pokemons.component.ts","webpack:///src/app/pages/all-pokemons/all-pokemons.component.html","webpack:///src/app/services/all-pokemons.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","weight","moves","AllPokemonsComponent","allPokemonsService","http","Arraya","Allpp","hide","fiftyOne","oneHundredOne","oneHundredTwentyFive","s","Clicked","Types","getP","getT","getAllPokemons","subscribe","data","console","log","forEach","element","url","get","push","error","getAllTypes","i","event","srcElement","className","document","getElementById","hidden","loadPokemons","AllPokemonsService","n","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Pokemons';\n}\n","<app-all-pokemons></app-all-pokemons>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AllPokemonsComponent } from './pages/all-pokemons/all-pokemons.component';\n \nimport {MDCCheckbox} from '@material/checkbox';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    AllPokemonsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport {AllPokemonsService} from 'src/app/services/all-pokemons.service'\nimport { IAll } from 'src/app/interfaces/all.interface';\nimport { Plist } from 'src/app/models/allPokemons.model';\nimport { element } from 'protractor';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-all-pokemons',\n  templateUrl: './all-pokemons.component.html',\n  styleUrls: ['./all-pokemons.component.scss']\n})\n  \nexport class AllPokemonsComponent implements OnInit {\n  Arraya:Array<any> =[]\n  Allpp:Array<any> =[]\n  name:string\n  url:string \n  id:number\n\n  hide:boolean = true\n  try:boolean   \n// \n\nfiftyOne:number = 10\noneHundredOne:number  = 60\noneHundredTwentyFive:number = 110\n\n\ns:number = 20\n  p:Array<any> \n  Clicked:Array<any> =[]\n// \n// All Types\nTypes:Array<any> =[]\n\n  constructor(private allPokemonsService:AllPokemonsService , private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getP()\n     this.getT()\n    // this.createPList()\n  }\n  private getP() {\n    // this.allPokemonsService.getAllPokemons\n    this.allPokemonsService.getAllPokemons().subscribe(\n      data =>{\n       \n       this.Arraya = data['results'];\n       \n        console.log('this.Arraya' , this.Arraya)\n        // data['results'].forEach(element => {\n        //   this.http.get<Array<IAll>>(element.url )\n        // })\n\n\n        this.Arraya.forEach(element =>{\n          console.log(element.url)\n           this.http.get<Array<IAll>>(element.url).subscribe(\n              data =>{ \n                this.Allpp.push(data)\n               console.log(data)\n               console.log('this all' ,this.Allpp[0])\n               \n              })\n\n\n      }, error => {console.log('Oops' , error)}\n    )\n\n\n\n     \n    })\n     \n  }\n private getT(){\n  this.allPokemonsService.getAllTypes().subscribe(\n   data =>{\n     console.log(data['results'])\n    this.Types = data['results'];\n   }\n\n  )\n }\n \n\n  // public createPList():void{\n  //   const newP:IAll = new Plist(this.id, this.name , this.url);\n  //   if(this.Arraya.length > 0){\n  //     newP.id = this.Arraya.slice(-1)[0].url.slice(34, -1);\n  //     newP.name = this.Arraya.slice(-1)[0].name\n  //     newP.url = this.Arraya.slice(-1)[0].url\n  //     console.log('what' , newP)\n  //   }\n  // }\n  onClickMe(Allpp , i){\n    this.Clicked.push(this.Allpp[i])\n    console.log(this.Allpp[i])\n    console.log(this.Clicked)\n  }\n  loadPokemons(){\n    this.fiftyOne  += 9\n    this.oneHundredOne  += 9\n    this.oneHundredTwentyFive += 9\n  }\n\n\n\n  chooseType(event : any){\n    this.hide = false\n    console.log(event.srcElement.className)\n    if( document.getElementById('checker').className != event.srcElement.className){\n document.getElementById('checker').hidden = true\n    }\n \n  }\n\n\n\n}","<!-- here be types -->\n\n<div class=\"Types\">\n  <span class=\"Types-action-button\">\n    <i class=\"Types-action-button__icon\"></i>\n  </span>\n  <ul class=\"Types-buttons\">\n    <li class=\"Types-buttons__item\">\n      <a href=\"#\" class=\"Types-buttons__link\" data-tooltip=\"Facebook\">\n        <i class=\"icon-material icon-material_fb\"></i>\n      </a>\n    </li>\n    <li class=\"Types-buttons__item\">\n      <a href=\"#\" class=\"Types-buttons__link\" data-tooltip=\"Twitter\">\n        <i class=\"icon-material icon-material_tw\"></i>\n      </a>\n    </li>\n    <li class=\"Types-buttons__item\">\n      <a href=\"#\" class=\"Types-buttons__link\" data-tooltip=\"Linkedin\">\n        <i class=\"icon-material icon-material_li\"></i>\n      </a>\n    </li>\n    <li class=\"Types-buttons__item\">\n      <a href=\"#\" class=\"Types-buttons__link\" data-tooltip=\"Google+\">\n        <i class=\"icon-material icon-material_gp\"></i>\n      </a>\n    </li>\n  </ul>\n</div>\n\n\n\n\n\n\n \n\n\n<div class=\"flex\">\n  <div *ngFor=\"let type of Types , let i = index  \">\n    <input type=\"checkbox\" (click)=\"chooseType($event)\" class=\"{{  type.name }}\">{{  type.name }} \n     \n  </div>\n</div>\n<div class=\"column\">\n  <div class=\"main\">\n\n\n\n\n    <!-- here be main -->\n\n\n    <div class=\"Pokemons\" *ngIf=\"hide\">\n\n\n       \n\n      <div class=\"Pokemons__List1\">\n        <div *ngFor=\"let p of Allpp , let i = index  \" (click)=\"onClickMe(Allpp , i)\">\n\n          <!-- <div *ngIf=\" 51 < i && i < 101 \">  -->\n            <ng-container *ngIf=\"hide\"> \n              <div *ngIf=\"0 < i && i <= fiftyOne \" class=\"border\" >\n            <!--тут border -->\n            <div>{{   [i] }}</div>\n            <div> {{  p[i]}}</div>\n            <div> <img src=\"https://pokeres.bastionbot.org/images/pokemon/{{p.id}}.png\" alt=\"\"></div>\n            <div class=\"Pokemons__List1__pName\">{{  p.name }}</div>\n            <div>тут ід {{  p.id }}</div>\n\n            <!-- <div>{{  p.types[0].type.name}}  </div> -->\n            <div class=\"flex\">\n              <div *ngFor=\"let n of p.types , let a = index  \">\n                <div class=\"{{  n.type.name }}\"> {{  n.type.name }} </div>\n              </div>\n            </div>\n            <div class='{{p.url}}'>{{  p.url}}</div>\n\n            <!-- <td>{{  p.url }}</td>  -->\n\n          </div>\n        </ng-container>\n        </div>\n      </div>\n\n\n      <div class=\"Pokemons__List2\">\n        <div *ngFor=\"let p of Allpp , let i = index  \" (click)=\"onClickMe(Allpp , i)\">\n\n          <!-- <div *ngIf=\" 51 < i && i < 101 \">  -->\n            <ng-container *ngIf=\"hide\"> \n          <div *ngIf=\" 51 <= i && i <= oneHundredOne \" class=\"border\"  >\n            <!--тут border -->\n            <div>{{   [i] }}</div>\n            <div> {{  p[i]}}</div>\n            <div> <img src=\"https://pokeres.bastionbot.org/images/pokemon/{{p.id}}.png\" alt=\"\"></div>\n            <div class=\"Pokemons__List2__pName\">{{  p.name }}</div>\n            <div>тут ід {{  p.id }}</div>\n\n            <!-- <div>{{  p.types[0].type.name}}  </div> -->\n            <div class=\"flex\">\n              <div *ngFor=\"let n of p.types , let a = index  \">\n                <div class=\"{{  n.type.name }}\"> {{  n.type.name }} </div>\n              </div>\n            </div>\n            <div class='{{p.url}}'>{{  p.url}}</div>\n\n            <!-- <td>{{  p.url }}</td>  -->\n\n          </div>\n        </ng-container>\n        </div>\n        \n      </div>\n\n\n      <div class=\"Pokemons__List3\" >\n        <div *ngFor=\"let p of Allpp , let i = index  \" (click)=\"onClickMe(Allpp , i)\">\n          <!-- <div *ngIf=\"   i >= 101 \">  -->\n            <ng-container *ngIf=\"hide\"> \n          <div *ngIf=\"   i >= 101 && i <= oneHundredTwentyFive\" class=\"border\"  >\n            <!--тут border -->\n            <div>{{   [i] }}</div>\n            <div> {{  p[i]}}</div>\n            <div> <img src=\"https://pokeres.bastionbot.org/images/pokemon/{{p.id}}.png\" alt=\"\"></div>\n            <div class=\"Pokemons__List3__pName\">{{  p.name }}</div>\n            <div>тут ід {{  p.id }}</div>\n\n            <!-- <div>{{  p.types[0].type.name}}  </div> -->\n            <div class=\"flex\">\n              <div *ngFor=\"let n of p.types , let a = index  \">\n                <div class=\"{{  n.type.name }}\"> {{  n.type.name }} </div>\n              </div>\n            </div>\n            <div class='{{p.url}}'>{{  p.url}}</div>\n\n            <!-- <td>{{  p.url }}</td>  -->\n\n          </div>\n        </ng-container>\n        </div>\n      </div>\n\n\n    </div>\n\n\n\n\n<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->\n\n \n<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->\n\n\n\n\n    <div class=\"info\">\n      <div class=\"\">{{ Clicked }}</div>\n      <div *ngFor=\"let p of Clicked , let i = index  \">\n        <div> <img src=\"https://pokeres.bastionbot.org/images/pokemon/{{p.id}}.png\" alt=\"\"></div>\n\n\n        <div *ngFor=\"let n of p.types , let a = index  \">\n          <div class=\"{{  n.type.name }}\">{{  n.type.name }} </div>\n        </div>\n        <!-- if id < 10; 100 -->\n        <div>  #00{{  p.id }}</div>\n        <div class=' '>{{  p.stats[0].stat.name}} {{  p.stats[0].base_stat}}</div>\n        <div class=' '>{{  p.stats[1].stat.name}} {{  p.stats[1].base_stat}}</div>\n        <div class=' '> {{  p.stats[2].stat.name}} {{  p.stats[2].base_stat}}</div>\n        <div class=' '> {{  p.stats[3].stat.name}} {{  p.stats[3].base_stat}}</div>\n        <div class=' '> {{  p.stats[4].stat.name}} {{  p.stats[4].base_stat}}</div>\n        <div class=' '> {{  p.stats[5].stat.name}} {{  p.stats[5].base_stat}}</div>\n        <div class=' '> weight {{  p.weight }}</div>\n\n        <!--  ????? -->\n        <div class=' '> moves {{  p.moves.length }}</div>\n      </div>\n    </div>\n    \n  </div>\n\n   \n</div>\n<div class=\"b1\"> <button (click)=\"loadPokemons()\">Load more</button></div>\n \n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IAll } from '../interfaces/all.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllPokemonsService {\n\n  constructor(private http: HttpClient) {  }\npublic n:number = 151\n \n  public getAllPokemons():Observable<Array<IAll>>  {\n   return  this.http.get<Array<IAll>>(`https://pokeapi.co/api/v2/pokemon?limit=${this.n}`) \n   \n//     this.http.get(`https://pokeapi.co/api/v2/pokemon?limit=${this.n}`).subscribe(json => console.log('hehe' , json.results.forEach(element => {\n//     console.log(element)\n//     this.results = element\n//     // this.htmlToAdd +=  `<div class=\"something\" > ${ element.url}  </div>  `\n//     console.log('elem.id' , element.id)\n//     // this.element1 = element\n//     console.log('this.url' , element.url)\n//     // this.input =  element.url;\n//     // this. input = this.input.slice(34, -1);\n//     // this.input.substring(this.input.length() - 4);\n// // console.log(this.input);\n    \n// // index = str; \n\n//     })))\n//   return   this.element.url\n//   }\n  } \n  getAllTypes():Observable<Array<any>>{\n    return  this.http.get<Array<IAll>>(`https://pokeapi.co/api/v2/type/?limit=999`)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}